         TITLE 'MQSeries Data Conversion User Exit - non-CICS'          00400000
         LCLC  &X9_NAME                                                 00800000
**********************************************************************  01200000
*                                                                    *  01600000
*    Product Number        : 5695-137                                *  02000000
*                                                                    *  02400000
*    Module Name           : CSQ4BAX9                                *  02800000
*                                                                    *  03200000
*    Environment           : Data conversion exit                    *  03600000
*                                                                    *  04000000
*    Description : Sample skeleton for a data conversion exit,       *  04400000
*                  for use in non-CICS environments.                 *  04600000
*                                                                    *  04800000
*    Function    : This program is a skeleton for a data conversion  *  05200000
*                  user exit for use in environments other than      *  05500000
*                  CICS.  It provides a wrapper for code fragments   *  05600000
*                  generated by the data conversion exit utility     *  06000000
*                  CSQUCVX.                                          *  06400000
*                                                                    *  06800000
*                  (For the CICS environment, see the sample         *  06840000
*                  CSQ4CAX9 instead.                                 *  06880000
*                  If you are not using the utility CSQUCVX to help  *  06920000
*                  you write the exit, see the sample CSQ4BAX8       *  06960000
*                  instead.)                                         *  07040000
*                                                                    *  07120000
*    Parameters  : For parameter details, see                        *  07200000
*                  "MQSeries Application Programming Reference".     *  07600000
*                                                                    *  08000000
*    Usage       : The utility produces one code fragment comprising *  08400000
*                  a subroutine for each data structure.  A message  *  08800000
*                  format may be defined in terms of several such    *  09200000
*                  structures, so that several subroutines will need *  09600000
*                  to be added to this skeleton to produce a routine *  10000000
*                  to do the data conversion of the entire format.   *  10400000
*                                                                    *  10800000
*                  1. Add the subroutines from the utility in the    *  11200000
*                     'CONVERSION ROUTINES' section as indicated.    *  11600000
*                                                                    *  12000000
*                  2. The subroutines generated by the utility       *  12030000
*                     assume that your data structures are not       *  12060000
*                     packed, and that field alignment is honoured   *  12090000
*                     by including padding bytes where required,     *  12120000
*                     with the structure starting on a fullword.     *  12150000
*                     If your data structures are packed, omit the   *  12180000
*                     CMQXCALA macros from the subroutines.          *  12210000
*                                                                    *  12240000
*                  3. This sample exit will return an error if the   *  12270000
*                     input buffer is shorter than the message       *  12300000
*                     format to be converted;  although the exit     *  12330000
*                     converts as many complete fields as possible,  *  12360000
*                     the error will cause an unconverted message    *  12390000
*                     to be returned to the application.             *  12400000
*                     If you wish to allow short input buffers to    *  12450000
*                     be converted as far as possible, including     *  12480000
*                     partial fields, change the TRUNC= value on     *  12520000
*                     the CSQXCDFA macro to YES;  no error will      *  12560000
*                     then be returned, so the application will      *  12600000
*                     receive a converted message.  The application  *  12640000
*                     is responsible for handling the truncation.    *  12680000
*                                                                    *  12720000
*                  4. Add calls to the subroutines in the            *  12760000
*                     'MAIN PROCESSING' section as indicated, in the *  12800000
*                     order that the structures occur in the message.*  13200000
*                                                                    *  13600000
*                  5. Replace CSQ4BAX9 in the following by the       *  14000000
*                     name of the format to be converted:            *  14400000
&X9_NAME SETC  'CSQ4BAX9'                                               14800000
*                                                                    *  15200000
*    Link-editing: Use the MQSeries libraries, and include CSQASTUB. *  15600000
*                  Give the module the name of the format.           *  16000000
*                                                                    *  16400000
*    Registers   : See comments on register equates.                 *  16800000
*                                                                    *  17200000
**********************************************************************  17600000
*    @START_COPYRIGHT@                                               *  18000000
*   Statement:     Licensed Materials - Property of IBM              *  18400000
*                                                                    *  18800000
*                  5695-137                                          *  19200000
*                  (C) Copyright IBM Corporation. 1993, 1997         *  19600000
*                                                                    *  20000000
*   Status:        Version 1 Release 2                               *  20400000
*    @END_COPYRIGHT@                                                 *  20800000
*                                                                    *  21200000
**********************************************************************  21600000
*                                                                       22000000
&X9_NAME CSECT ,                                                        22400000
&X9_NAME AMODE 31                                                       22800000
&X9_NAME RMODE ANY                                                      23200000
*                                                                       23600000
R0       EQU   0                                                        24000000
R1       EQU   1                                                        24400000
R2       EQU   2                       MQDXP address                    24800000
R3       EQU   3                       MQMD  address                    25200000
R4       EQU   4                                                        25600000
R5       EQU   5                                                        26000000
R6       EQU   6                                                        26400000
R7       EQU   7                                                        26800000
R8       EQU   8                       Parameter list address           27200000
R9       EQU   9                       Internal subroutine linkage      27600000
R10      EQU   10                                                       28000000
R11      EQU   11                                                       28400000
R12      EQU   12                      Base register                    28800000
R13      EQU   13                      Save and work area address       29200000
R14      EQU   14                                                       29600000
R15      EQU   15                                                       30000000
*                                                                       30400000
*********************************************************************** 30800000
*        MQ API CONSTANTS AND DSECTS                                  * 31200000
*********************************************************************** 31600000
*                                                                       32000000
         CMQA    LIST=NO                                                32400000
         CMQXA   LIST=NO                                                32800000
MQDXP    CMQDXPA DSECT=YES,LIST=YES    DSECT for MQDXP structure        33200000
MQMD     CMQMDA  DSECT=YES,LIST=YES    DSECT for MQMD structure         33600000
*                                                                       34000000
*********************************************************************** 34400000
*        SAVE AND WORK AREA DSECT                                     * 34800000
*********************************************************************** 35200000
*                                                                       35600000
X9_DATA  DSECT ,                                                        36000000
X9_SAVE        DS 18F                  Save area                        36400000
*                                                                       36800000
X9_WORK        DS 20F                  Conversion work area             37200000
X9_INPOS       DS A                    Input buffer position            37600000
X9_INBUF       DS A                    Input buffer start               37800000
X9_INEND       DS A                    Input buffer end                 38000000
X9_OUTPOS      DS A                    Output buffer position           38400000
X9_OUTBUF      DS A                    Output buffer start              38600000
X9_OUTEND      DS A                    Output buffer end                38800000
X9_RETCODE     DS F                    Return code                      39200000
*                                                                       39600000
X9_DLEN  EQU   *-X9_DATA                                                40000000
*                                                                       40400000
*********************************************************************** 40800000
*        START OF PROGRAM                                             * 41200000
*********************************************************************** 41600000
*                                                                       42000000
&X9_NAME CSECT ,                                                        42400000
         STM   R14,R12,12(R13)              Save registers              42800000
         LR    R12,R15                      Set base register           43200000
         USING &X9_NAME,R12                 Set addressability          43600000
         LR    R8,R1                        Save parmlist address       44000000
*                                           Get storage for work area   44400000
       GETMAIN RU,LV=X9_DLEN,LOC=(RES,ANY)                              44800000
         ST    R13,4(,R1)                   Chain save areas            45200000
         ST    R1,8(,R13)                                               45600000
         LR    R13,R1                       Set save area address       46000000
         USING X9_DATA,R13                  Set addressability          46400000
*                                                                       46800000
         LM    R2,R7,0(R8)                  Get parameter addresses     47200000
         USING MQDXP,R2                     MQDXP address               47600000
         USING MQMD,R3                      MQMD address                48000000
         LA    R5,0(,R5)                    Input buffer address        48400000
         ST    R5,X9_INPOS                                              48800000
         ST    R5,X9_INBUF                                              49000000
         A     R5,0(,R4)                    Input buffer end address    49200000
         BCTR  R5,0                                                     49600000
         ST    R5,X9_INEND                                              50000000
         LA    R7,0(,R7)                    Output buffer address       50400000
         ST    R7,X9_OUTPOS                                             50800000
         ST    R7,X9_OUTBUF                                             51200000
         BCTR  R7,0                                                     51600000
         A     R7,0(,R6)                    Output buffer end address   51800000
         ST    R7,X9_OUTEND                                             52000000
*                                                                       52400000
         L     R0,=A(MQRC_NONE)                                         52800000
         ST    R0,X9_RETCODE                                            53200000
*                                                                       53600000
*                                           Define conversion variables 54000000
      CMQXCDFA WORK=X9_WORK,                                           +54400000
               INPOS=X9_INPOS,                                         +54800000
               INBUF=X9_INBUF,                                         +55000000
               INEND=X9_INEND,                                         +55200000
               OUTPOS=X9_OUTPOS,                                       +55600000
               OUTBUF=X9_OUTBUF,                                       +55800000
               OUTEND=X9_OUTEND,                                       +56000000
               HCONN=MQDXP_HCONN,                                      +56400000
               MSGCCSID=MQMD_CODEDCHARSETID,                           +56800000
               REQCCSID=MQDXP_CODEDCHARSETID,                          +57200000
               MSGENC=MQMD_ENCODING,                                   +57600000
               REQENC=MQDXP_ENCODING,                                  +58000000
               REASON=MQDXP_REASON,                                    +58400000
               APPOPTIONS=MQDXP_APPOPTIONS,                            +58800000
               RETCODE=X9_RETCODE,                                     +59200000
               FAIL=X9_FAIL,                                           +59500000
               TRUNC=NO                     No truncated input          59800000
*                                                                       60000000
*********************************************************************** 60400000
*        MAIN PROCESSING                                              * 60800000
*********************************************************************** 61200000
*                                                                       61600000
*  >>>>> Replace the following example by calls to the conversion       62000000
*        subroutines, in the order that the structures appear in the    62400000
*        message format:                                                62800000
         BAL   R9,Convert_STRUC_1           Convert structure STRUCT_1  63200000
*                                                                       63600000
*********************************************************************** 64000000
*        CHECK RESULTS OF CONVERSION                                  * 64400000
*********************************************************************** 64800000
*                                                                       65200000
X9_FAIL  DS    0H                                                       65600000
*                                                                       66000000
         L     R15,X9_RETCODE               Get conversion return code  66400000
         L     R1,MQDXP_REASON              Note mqget reason code      66800000
*                                                                       67200000
         C     R15,=A(MQRC_NONE)            Check result                67600000
         BE    X9_OK                                                    68000000
*                                      CONVERSION DID NOT SUCCEED:      68400000
         C     R1,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                       68800000
         BNE   X9_ERROR                     - It failed unless message  69200000
*                                             was truncated and ...     69600000
         C     R15,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                      70000000
         BE    X9_TRUNC                     there was insufficient data 70400000
         C     R15,=A(MQRC_CONVERTED_MSG_TOO_BIG)                       70800000
         BNE   X9_ERROR                     or not enough output space  71200000
*                                                                       71600000
X9_TRUNC DS    0H                      TRUNCATION CAUSED FAILURE:       72000000
         L     R0,=A(MQXDR_OK)              - Show conversion success   72400000
         ST    R0,MQDXP_EXITRESPONSE                                    72800000
         B     X9_EXIT                      - But leave other values    73200000
*                                                                       73600000
X9_ERROR DS    0H                      CONVERSION FAILED:               74000000
         L     R0,=A(MQXDR_CONVERSION_FAILED)                           74400000
         ST    R0,MQDXP_EXITRESPONSE        - Show conversion failure   74800000
         L     R0,=A(MQCC_WARNING)          - Show MQGET failure        75200000
         ST    R0,MQDXP_COMPCODE                                        75600000
         ST    R15,MQDXP_REASON                                         76000000
         B     X9_EXIT                                                  76400000
*                                                                       76800000
X9_OK    DS    0H                      CONVERSION SUCCEEDED:            77200000
         L     R0,=A(MQXDR_OK)              - Show conversion success   77600000
         ST    R0,MQDXP_EXITRESPONSE                                    78000000
         L     R0,=A(MQCC_OK)               - Show MQGET success        78400000
         ST    R0,MQDXP_COMPCODE                                        78800000
         ST    R15,MQDXP_REASON                                         79200000
         L     R15,MQDXP_CODEDCHARSETID     - Set new values            79280000
         ST    R15,MQMD_CODEDCHARSETID                                  79360000
         L     R15,MQDXP_ENCODING                                       79440000
         ST    R15,MQMD_ENCODING                                        79520000
*                                                                       79600000
         C     R1,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                       80000000
         BE    X9_EXIT                      Was message truncated?      80400000
         L     R0,X9_OUTPOS                 If not, return new length   80800000
         S     R0,X9_OUTBUF                                             81200000
         ST    R0,MQDXP_DATALENGTH                                      82000000
*              Note: for this to work correctly, any user-supplied      82500000
*              routines must update the output buffer position in       83000000
*              X9_OUTPOS, like the utility-generated routines do.       83500000
*                                                                       84000000
*********************************************************************** 84500000
*        END OF PROGRAM                                               * 85000000
*********************************************************************** 85500000
*                                                                       86000000
X9_EXIT  DS    0H                                                       86500000
         L     R13,4(,R13)                  Restore callers save area   87000000
         L     R1,8(,R13)                                               87500000
      FREEMAIN RU,LV=X9_DLEN,A=(1)          Free save area              88000000
         LM    R14,R12,12(R13)              Restore registers           88500000
         SR    R15,R15                      Return with RC=0            89000000
         BR    R14                                                      89500000
*                                                                       90000000
*********************************************************************** 90500000
*        CONVERSION ROUTINES                                          * 91000000
*********************************************************************** 91500000
*                                                                       92000000
*  >>>>> Replace the following example by the conversion subroutines    92200000
*        from the utility:                                              92400000
*                                                                       92500000
*<<------------------------------------------------------------------   92800000
Convert_STRUC_1 DS 0H                                                   93000000
*                                                                       93200000
*        ...                                                            93300000
*                                                                       93500000
         BR    9                                                        93900000
*------------------------------------------------------------------>>   94000000
*                                                                       94500000
*********************************************************************** 95000000
*        CONSTANTS                                                    * 95500000
*********************************************************************** 96000000
*                                                                       96500000
         LTORG ,                                                        97000000
*                                                                       97500000
*********************************************************************** 98000000
*        End Of Module                                                * 98500000
*********************************************************************** 99000000
         END   &X9_NAME                                                 99500000
