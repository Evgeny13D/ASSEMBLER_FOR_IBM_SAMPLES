*ASM XOPTS(NOPROLOG NOEPILOG)                                           00300000
         TITLE 'MQSeries Data Conversion User Exit - CICS'              00600000
         LCLC  &X9_NAME                                                 00900000
**********************************************************************  01200000
*                                                                    *  01500000
*    Product Number        : 5695-137                                *  01800000
*                                                                    *  02100000
*    Module Name           : CSQ4CAX9                                *  02400000
*                                                                    *  02700000
*    Environment           : Data conversion exit                    *  03000000
*                                                                    *  03300000
*    Description : Sample skeleton for a data conversion exit,       *  03600000
*                  for use in CICS environment.                      *  03900000
*                                                                    *  04200000
*    Function    : This program is a skeleton for a data conversion  *  04500000
*                  user exit for use in the CICS environment.  It    *  04800000
*                  provides a wrapper for code fragments generated   *  05100000
*                  by the data conversion exit utility CSQUCVX.      *  05400000
*                                                                    *  05700000
*                  (For environments other than CICS, see the        *  06000000
*                  sample CSQ4BAX9 instead.                          *  06300000
*                  If you are not using the utility CSQUCVX to help  *  06600000
*                  you write the exit, see the sample CSQ4BAX8       *  06900000
*                  instead.)                                         *  07200000
*                                                                    *  07500000
*    Parameters  : For parameter details, see                        *  07800000
*                  "MQSeries Application Programming Reference".     *  08100000
*                                                                    *  08400000
*    Usage       : The utility produces one code fragment comprising *  08700000
*                  a subroutine for each data structure.  A message  *  09000000
*                  format may be defined in terms of several such    *  09300000
*                  structures, so that several subroutines will need *  09600000
*                  to be added to this skeleton to produce a routine *  09900000
*                  to do the data conversion of the entire format.   *  10200000
*                                                                    *  10500000
*                  1. Add the subroutines from the utility in the    *  10800000
*                     'CONVERSION ROUTINES' section as indicated.    *  11100000
*                                                                    *  11400000
*                  2. The subroutines generated by the utility       *  11700000
*                     assume that your data structures are not       *  12000000
*                     packed, and that field alignment is honoured   *  12300000
*                     by including padding bytes where required,     *  12600000
*                     with the structure starting on a fullword.     *  12900000
*                     If your data structures are packed, omit the   *  13200000
*                     CMQXCALA macros from the subroutines.          *  13500000
*                                                                    *  13800000
*                  3. This sample exit will return an error if the   *  14100000
*                     input buffer is shorter than the message       *  14400000
*                     format to be converted;  although the exit     *  14700000
*                     converts as many complete fields as possible,  *  15000000
*                     the error will cause an unconverted message    *  15300000
*                     to be returned to the application.             *  15600000
*                     If you wish to allow short input buffers to    *  15900000
*                     be converted as far as possible, including     *  16200000
*                     partial fields, change the TRUNC= value on     *  16500000
*                     the CSQXCDFA macro to YES;  no error will      *  16800000
*                     then be returned, so the application will      *  17100000
*                     receive a converted message.  The application  *  17400000
*                     is responsible for handling the truncation.    *  17700000
*                                                                    *  18000000
*                  4. Add calls to the subroutines in the            *  18300000
*                     'MAIN PROCESSING' section as indicated, in the *  18600000
*                     order that the structures occur in the message.*  18900000
*                                                                    *  19200000
*                  5. Replace CSQ4CAX9 in the following by the       *  19500000
*                     name of the format to be converted:            *  19800000
&X9_NAME SETC  'CSQ4CAX9'                                               20100000
*                                                                    *  20400000
*                  6. Before assembling, pre-process with the CICS   *  20700000
*                     translator, using the options                  *  21000000
*                       XOPTS(NOEPILOG NOPROLOG)                     *  21300000
*                                                                    *  21600000
*    Link-editing: Use the MQSeries libraries, and include CSQASTUB  *  21900000
*                  and the CICS assembler stub DFHEAI.  The latter   *  22200000
*                  must be ordered first in the load module.  Give   *  22500000
*                  the module the name of the format.                *  22800000
*                                                                    *  23100000
*                  Define the program to CICS in the usual way, but  *  23400000
*                  specify EXECKEY(CICS).                            *  23700000
*                                                                    *  24000000
*    Registers   : See comments on register equates.                 *  24300000
*                                                                    *  24600000
**********************************************************************  24900000
*    @START_COPYRIGHT@                                               *  25200000
*   Statement:     Licensed Materials - Property of IBM              *  25500000
*                                                                    *  25800000
*                  5695-137                                          *  26100000
*                  (C) Copyright IBM Corporation. 1993, 1997         *  26400000
*                                                                    *  26700000
*   Status:        Version 1 Release 2                               *  27000000
*    @END_COPYRIGHT@                                                 *  27300000
*                                                                    *  27600000
**********************************************************************  27900000
*                                                                       28200000
&X9_NAME CSECT ,                                                        28500000
&X9_NAME AMODE 31                                                       28800000
&X9_NAME RMODE ANY                                                      29100000
*                                                                       29400000
R0       EQU   0                                                        29700000
R1       EQU   1                                                        30000000
R2       EQU   2                       MQDXP address                    30300000
R3       EQU   3                       MQMD  address                    30600000
R4       EQU   4                                                        30900000
R5       EQU   5                                                        31200000
R6       EQU   6                                                        31500000
R7       EQU   7                                                        31800000
R8       EQU   8                       Parameter list address           32100000
R9       EQU   9                       Internal subroutine linkage      32400000
R10      EQU   10                                                       32700000
R11      EQU   11                                                       33000000
R12      EQU   12                      Base register                    33300000
R13      EQU   13                      Save and work area address       33600000
R14      EQU   14                                                       33900000
R15      EQU   15                                                       34200000
*                                                                       34500000
*********************************************************************** 34800000
*        MQ API CONSTANTS AND DSECTS                                  * 35100000
*********************************************************************** 35400000
*                                                                       35700000
         CMQA    LIST=NO                                                36000000
         CMQXA   LIST=NO                                                36300000
MQDXP    CMQDXPA DSECT=YES,LIST=YES    DSECT for MQDXP structure        36600000
MQMD     CMQMDA  DSECT=YES,LIST=YES    DSECT for MQMD structure         36900000
*                                                                       37200000
*********************************************************************** 37500000
*        SAVE AND WORK AREA DSECT                                     * 37800000
*********************************************************************** 38100000
*                                                                       38400000
DFHEISTG DSECT ,                                                        38800000
         DFHEISTG ,                    CICS generated data area         39200000
X9_DATA        DS 0F                                                    39600000
X9_SAVE        DS 18F                  Save area                        40000000
*                                                                       40400000
X9_WORK        DS 20F                  Conversion work area             40800000
X9_INPOS       DS A                    Input buffer position            41200000
X9_INBUF       DS A                    Input buffer start               41600000
X9_INEND       DS A                    Input buffer end                 42000000
X9_OUTPOS      DS A                    Output buffer position           42400000
X9_OUTBUF      DS A                    Output buffer start              42800000
X9_OUTEND      DS A                    Output buffer end                43200000
X9_RETCODE     DS F                    Return code                      43600000
*                                                                       44000000
X9_DLEN  EQU   *-X9_DATA                                                44400000
         DFHEIEND ,                                                     44800000
*                                                                       45200000
*********************************************************************** 45600000
*        START OF PROGRAM                                             * 46000000
*********************************************************************** 46400000
*                                                                       46800000
&X9_NAME DFHEIENT CODEREG=12,DATAREG=13,EIBREG=10                       47200000
*                                      CICS prolog                      47600000
*                                                                       48000000
         EXEC CICS ADDRESS COMMAREA(R8)                                 48400000
         LM    R2,R7,0(R8)                  Get parameter addresses     48800000
         USING MQDXP,R2                     MQDXP address               49200000
         USING MQMD,R3                      MQMD address                49600000
         LA    R5,0(,R5)                    Input buffer address        50000000
         ST    R5,X9_INPOS                                              50400000
         ST    R5,X9_INBUF                                              50800000
         A     R5,0(,R4)                    Input buffer end address    51200000
         BCTR  R5,0                                                     51600000
         ST    R5,X9_INEND                                              52000000
         LA    R7,0(,R7)                    Output buffer address       52400000
         ST    R7,X9_OUTPOS                                             52800000
         ST    R7,X9_OUTBUF                                             53200000
         BCTR  R7,0                                                     53600000
         A     R7,0(,R6)                    Output buffer end address   54000000
         ST    R7,X9_OUTEND                                             54400000
*                                                                       54800000
         L     R0,=A(MQRC_NONE)                                         55200000
         ST    R0,X9_RETCODE                                            55600000
*                                                                       56000000
*                                           Define conversion variables 56400000
      CMQXCDFA WORK=X9_WORK,                                           +56800000
               INPOS=X9_INPOS,                                         +57200000
               INBUF=X9_INBUF,                                         +57600000
               INEND=X9_INEND,                                         +58000000
               OUTPOS=X9_OUTPOS,                                       +58400000
               OUTBUF=X9_OUTBUF,                                       +58800000
               OUTEND=X9_OUTEND,                                       +59200000
               HCONN=MQDXP_HCONN,                                      +59600000
               MSGCCSID=MQMD_CODEDCHARSETID,                           +60000000
               REQCCSID=MQDXP_CODEDCHARSETID,                          +60400000
               MSGENC=MQMD_ENCODING,                                   +60800000
               REQENC=MQDXP_ENCODING,                                  +61200000
               REASON=MQDXP_REASON,                                    +61600000
               APPOPTIONS=MQDXP_APPOPTIONS,                            +62000000
               RETCODE=X9_RETCODE,                                     +62400000
               FAIL=X9_FAIL,                                           +62800000
               TRUNC=NO                     No truncated input          63200000
*                                                                       63600000
*********************************************************************** 64000000
*        MAIN PROCESSING                                              * 64400000
*********************************************************************** 64800000
*                                                                       65200000
*  >>>>> Replace the following example by calls to the conversion       65600000
*        subroutines, in the order that the structures appear in the    66000000
*        message format:                                                66400000
         BAL   R9,Convert_STRUC_1           Convert structure STRUCT_1  66800000
*                                                                       67200000
*********************************************************************** 67600000
*        CHECK RESULTS OF CONVERSION                                  * 68000000
*********************************************************************** 68400000
*                                                                       68800000
X9_FAIL  DS    0H                                                       69200000
*                                                                       69600000
         L     R15,X9_RETCODE               Get conversion return code  70000000
         L     R1,MQDXP_REASON              Note mqget reason code      70400000
*                                                                       70800000
         C     R15,=A(MQRC_NONE)            Check result                71200000
         BE    X9_OK                                                    71600000
*                                      CONVERSION DID NOT SUCCEED:      72000000
         C     R1,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                       72400000
         BNE   X9_ERROR                     - It failed unless message  72800000
*                                             was truncated and ...     73200000
         C     R15,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                      73600000
         BE    X9_TRUNC                     there was insufficient data 74000000
         C     R15,=A(MQRC_CONVERTED_MSG_TOO_BIG)                       74400000
         BNE   X9_ERROR                     or not enough output space  74800000
*                                                                       75200000
X9_TRUNC DS    0H                      TRUNCATION CAUSED FAILURE:       75600000
         L     R0,=A(MQXDR_OK)              - Show conversion success   76000000
         ST    R0,MQDXP_EXITRESPONSE                                    76400000
         B     X9_EXIT                      - But leave other values    76800000
*                                                                       77200000
X9_ERROR DS    0H                      CONVERSION FAILED:               77600000
         L     R0,=A(MQXDR_CONVERSION_FAILED)                           78000000
         ST    R0,MQDXP_EXITRESPONSE        - Show conversion failure   78400000
         L     R0,=A(MQCC_WARNING)          - Show MQGET failure        78800000
         ST    R0,MQDXP_COMPCODE                                        79200000
         ST    R15,MQDXP_REASON                                         79600000
         B     X9_EXIT                                                  80000000
*                                                                       80400000
X9_OK    DS    0H                      CONVERSION SUCCEEDED:            80800000
         L     R0,=A(MQXDR_OK)              - Show conversion success   81200000
         ST    R0,MQDXP_EXITRESPONSE                                    81600000
         L     R0,=A(MQCC_OK)               - Show MQGET success        82000000
         ST    R0,MQDXP_COMPCODE                                        82400000
         ST    R15,MQDXP_REASON                                         82800000
         L     R15,MQDXP_CODEDCHARSETID     - Set new values            82880000
         ST    R15,MQMD_CODEDCHARSETID                                  82960000
         L     R15,MQDXP_ENCODING                                       83040000
         ST    R15,MQMD_ENCODING                                        83120000
*                                                                       83200000
         C     R1,=A(MQRC_TRUNCATED_MSG_ACCEPTED)                       83600000
         BE    X9_EXIT                      Was message truncated?      84000000
         L     R0,X9_OUTPOS                 If not, return new length   84400000
         S     R0,X9_OUTBUF                                             84800000
         ST    R0,MQDXP_DATALENGTH                                      85200000
*              Note: for this to work correctly, any user-supplied      85600000
*              routines must update the output buffer position in       86000000
*              X9_OUTPOS, like the utility-generated routines do.       86400000
*                                                                       86800000
*********************************************************************** 87200000
*        END OF PROGRAM                                               * 87600000
*********************************************************************** 88000000
*                                                                       88400000
X9_EXIT  DS    0H                                                       88800000
         DFHEIRET ,                         CICS epilog                 89200000
*                                                                       89600000
*********************************************************************** 90000000
*        CONVERSION ROUTINES                                          * 90400000
*********************************************************************** 90800000
*                                                                       91200000
*  >>>>> Replace the following example by the conversion subroutines    91600000
*        from the utility:                                              92000000
*                                                                       92400000
*<<------------------------------------------------------------------   92800000
Convert_STRUC_1 DS 0H                                                   93200000
*                                                                       93600000
*        ...                                                            94000000
*                                                                       94400000
         BR    9                                                        94800000
*------------------------------------------------------------------>>   95200000
*                                                                       95600000
*********************************************************************** 96000000
*        CONSTANTS                                                    * 96400000
*********************************************************************** 96800000
*                                                                       97200000
         LTORG ,                                                        97600000
*                                                                       98000000
*********************************************************************** 98400000
*        End Of Module                                                * 98800000
*********************************************************************** 99200000
         END   &X9_NAME                                                 99600000
